name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize ]
    branches: [ main ]

env:
  PHP_VERSION: '8.3' # Latest stable version. See php-unit for supported version matrix
  PHP_CS_FIXER_CACHE_DIR: '.php-cs-fixer.cache'
  PHPSTAN_CACHE_DIR: '.phpstan.result.cache'
  COVERAGE_PATH: 'coverage.xml'
  GH_TOKEN: ${{ github.token }}

jobs:
  composer-validate:
    name: Validate composer.json
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: Validate composer.json
        run: composer validate --strict

  composer-psr:
    name: Check namespaces
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2

      - name: Check Optimized autoload
        run: composer dump-autoload --optimize --strict-psr

  php-code-style:
    name: PHP Code Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP version
        id: setup_php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2

      - name: Cache PHP-CS-Fixer
        uses: actions/cache@v3
        with:
          path: ${{ env.PHP_CS_FIXER_CACHE_DIR }}
          key: php-cs-fixer-${{ runner.os }}-${{ steps.setup_php.outputs.version }}

      - name: Check code style
        run: composer run cs

  php-stan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP version
        id: setup_php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2

      - name: Cache PHPStan
        uses: actions/cache@v3
        with:
          path: ${{ env.PHPSTAN_CACHE_DIR }}
          key: phpstan-${{ runner.os }}-${{ steps.setup_php.outputs.version }}

      - name: Run PHPStan
        run: composer run stan

  php-unit:
    name: PHP Tests - Unit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2

      - name: Run Unit tests
        run: composer run unit

  php-coverage:
    name: PHP Test coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: pcov

      - name: Install dependencies
        uses: ramsey/composer-install@v2

      - name: Run Unit tests
        run: vendor/bin/phpunit --coverage-clover=${{ env.COVERAGE_PATH }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ${{ env.COVERAGE_PATH }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  php-lint:
    name: PHP Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          tools: parallel-lint,cs2pr

      - name: Lint files
        run: parallel-lint --checkstyle . | cs2pr

  editorconfig:
    name: EditorConfig
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check EditorConfig configuration
        run: test -f .editorconfig

      - name: Check adherence to EditorConfig
        uses: greut/eclint-action@v0

  specs-regenerate:
    name: Regenerate specs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov

      - name: Install dependencies
        uses: ramsey/composer-install@v2

      - name: Update spec
        run: composer run update-spec

      - name: Run CSFixer
        run: composer run cs:fix

      - name: Check for changes
        run: git diff --exit-code

  typos:
    name: Typos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Search for misspellings
        uses: crate-ci/typos@master

  completed:
    name: Completed
    runs-on: ubuntu-latest
    needs:
      - composer-validate
      - composer-psr
      - php-code-style
      - php-stan
      - php-unit
      - php-coverage
      - php-lint
      - editorconfig
      - specs-regenerate
      - typos
    steps:
      - run: echo 'completed'
